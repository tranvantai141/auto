import { createStackNavigator } from '@react-navigation/stack';
import { RouteNames } from '@routeNames';
import React from 'react';
const Stack = createStackNavigator();

function UnAuthStackNavigator() {
  return (
    <Stack.Navigator
      initialRouteName={RouteNames.home.name}
      screenOptions={{
        headerShown: false,
      }}
    >
      <Stack.Screen
        name={RouteNames.productAndService.name}
        component={RouteNames.productAndService.component}
      />
      <Stack.Screen
        name={RouteNames.reviewInformation.name}
        component={RouteNames.reviewInformation.component}
      />
      <Stack.Screen
        name={RouteNames.reviewETBInformation.name}
        component={RouteNames.reviewETBInformation.component}
      />
      <Stack.Screen name={RouteNames.home.name} component={RouteNames.home.component} />
      <Stack.Screen
        name={RouteNames.onboardingHome.name}
        component={RouteNames.onboardingHome.component}
      />
      <Stack.Screen
        name={RouteNames.termsCondition.name}
        component={RouteNames.termsCondition.component}
      />
      <Stack.Screen
        name={RouteNames.userInformation.name}
        component={RouteNames.userInformation.component}
      />
      <Stack.Screen
        name={RouteNames.onBoardingStep1.name}
        component={RouteNames.onBoardingStep1.component}
      />
      <Stack.Screen
        name={RouteNames.customerImageScanner.name}
        component={RouteNames.customerImageScanner.component}
      />
      <Stack.Screen
        name={RouteNames.userService.name}
        component={RouteNames.userService.component}
      />
      <Stack.Screen
        name={RouteNames.onBoardingStep3.name}
        component={RouteNames.onBoardingStep3.component}
      />
      <Stack.Screen
        name={RouteNames.onBoardingStep2.name}
        component={RouteNames.onBoardingStep2.component}
      />
      <Stack.Screen
        name={RouteNames.onBoardingOptions.name}
        component={RouteNames.onBoardingOptions.component}
      />
      <Stack.Screen
        name={RouteNames.additionalInfo.name}
        component={RouteNames.additionalInfo.component}
      />
      <Stack.Screen
        name={RouteNames.serviceRating.name}
        component={RouteNames.serviceRating.component}
      />
      <Stack.Screen
        name={RouteNames.validateInformation.name}
        component={RouteNames.validateInformation.component}
      />
      <Stack.Screen
        name={RouteNames.captureSignature.name}
        component={RouteNames.captureSignature.component}
      />
      <Stack.Screen
        name={RouteNames.registrationSuccess.name}
        component={RouteNames.registrationSuccess.component}
      />
      <Stack.Screen
        name={RouteNames.existingCustomers.name}
        component={RouteNames.existingCustomers.component}
      />
      <Stack.Screen
        name={RouteNames.onBoardingReader.name}
        component={RouteNames.onBoardingReader.component}
      />
      <Stack.Screen
        name={RouteNames.existingUserDetail.name}
        component={RouteNames.existingUserDetail.component}
      />
      <Stack.Screen
        name={RouteNames.onBoardingSuccessResult.name}
        component={RouteNames.onBoardingSuccessResult.component}
        options={{
          gestureEnabled: false,  // This disables the swipe back gesture
        }}
      />
      <Stack.Screen
        name={RouteNames.customerInformation.name}
        component={RouteNames.customerInformation.component}
      />
      <Stack.Screen
        name={RouteNames.checkExistence.name}
        component={RouteNames.checkExistence.component}
      />
      <Stack.Screen
        name={RouteNames.idCardScanner.name}
        component={RouteNames.idCardScanner.component}
      />
      <Stack.Screen
        name={RouteNames.otpScreen.name}
        component={RouteNames.otpScreen.component}
        options={{ gestureEnabled: false }}
      />
      <Stack.Screen
        name={RouteNames.supplementaryInfo.name}
        component={RouteNames.supplementaryInfo.component}
      />
      <Stack.Screen
        name={RouteNames.captureWetSignatureScreen.name}
        component={RouteNames.captureWetSignatureScreen.component}
      />
      <Stack.Screen
        name={RouteNames.printApplicationScreen.name}
        component={RouteNames.printApplicationScreen.component}
        options={{ gestureEnabled: false }}
      />
      <Stack.Screen
        name={RouteNames.transactionList.name}
        component={RouteNames.transactionList.component}
      />
      <Stack.Screen
        name={RouteNames.transactionDetail.name}
        component={RouteNames.transactionDetail.component}
      />
      <Stack.Screen name={RouteNames.webView.name} component={RouteNames.webView.component} />
      <Stack.Screen
        name={RouteNames.customerInfo.name}
        component={RouteNames.customerInfo.component}
        options={{
          presentation: 'transparentModal',
        }}
      />
      <Stack.Screen
        name={RouteNames.printFromETBScreen.name}
        component={RouteNames.printFromETBScreen.component}
        options={{ gestureEnabled: false }}
      />
      <Stack.Screen
        name={RouteNames.productService.name}
        component={RouteNames.productService.component}
      />
      <Stack.Screen
        name={RouteNames.captureSupporingDocuments.name}
        component={RouteNames.captureSupporingDocuments.component}
      />
      <Stack.Screen
        name={RouteNames.etbFatcaInformation.name}
        component={RouteNames.etbFatcaInformation.component}
      />
      <Stack.Screen
        name={RouteNames.etbShowWetSignature.name}
        component={RouteNames.etbShowWetSignature.component}
      />
      <Stack.Screen
        name={RouteNames.etbCaptureWetSignScreen.name}
        component={RouteNames.etbCaptureWetSignScreen.component}
      />
      <Stack.Screen
        name={RouteNames.etbCaptureIdScreen.name}
        component={RouteNames.etbCaptureIdScreen.component}
      />
      <Stack.Screen
        name={RouteNames.etbSignatureUpdateScreen.name}
        component={RouteNames.etbSignatureUpdateScreen.component}
      />
      <Stack.Screen
        name={RouteNames.selectAndReplaceImageScreen.name}
        component={RouteNames.selectAndReplaceImageScreen.component}
      />
      <Stack.Screen
        name={RouteNames.etbCustomerSignonTablet.name}
        component={RouteNames.etbCustomerSignonTablet.component}
      />
    </Stack.Navigator>
  );
}

export default UnAuthStackNavigator;
